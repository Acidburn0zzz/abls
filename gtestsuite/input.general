# ----------------------------------------------------------------------
#
#  input.general
#  BLIS GtestSuite
#
#  This file contains input values that control how BLIS operations are
#  tested. Comments explain the purpose of each parameter as well as
#  accepted values.
#

1       # Number of repeats per experiment (best result is reported)
rc      # Matrix storage scheme(s) to test:
        #   'c' = col-major storage; 'g' = general stride storage;
        #   'r' = row-major storage
cj      # Vector storage scheme(s) to test:
        #   'c' = colvec / unit stride; 'j' = colvec / non-unit stride;
        #   'r' = rowvec / unit stride; 'i' = rowvec / non-unit stride
0       # Test all combinations of storage schemes?
1       # Perform all tests with alignment?
        #   '0' = do NOT align buffers/ldims; '1' = align buffers/ldims
0       # Randomize vectors and matrices using:
        #   '0' = real values on [-1,1];
        #   '1' = powers of 2 in narrow precision range
32      # General stride spacing (for cases when testing general stride)
sdcz    # Datatype(s) to test:
        #   's' = single real; 'c' = single complex;
        #   'd' = double real; 'z' = double complex
0       # Test gemm with mixed-domain operands?
0       # Test gemm with mixed-precision operands?
10      # Problem size: first to test
100     # Problem size: maximum to test
10      # Problem size: increment between experiments
        # Complex level-3 implementations to test:
0       #   3mh  ('1' = enable; '0' = disable)
0       #   3m1  ('1' = enable; '0' = disable)
0       #   4mh  ('1' = enable; '0' = disable)
0       #   4m1b ('1' = enable; '0' = disable)
0       #   4m1a ('1' = enable; '0' = disable)
0       #   1m   ('1' = enable; '0' = disable)
1       #   native ('1' = enable; '0' = disable)
1       # Simulate application-level threading:
        #   '1' = disable / use one testsuite thread;
        #   'n' = enable and use n testsuite threads
1       # Error-checking level:
        #   '0' = disable error checking; '1' = full error checking
i       # Reaction to test failure:
        #   'i' = ignore; 's' = sleep() and continue; 'a' = abort
0       # Output results in matlab/octave format? ('1' = yes; '0' = no)
0       # Output results to stdout AND files? ('1' = yes; '0' = no)
0       # api        : '0' = BLIS / '1' = CBLAS / '2' = BLAS
0       # m/n/k      : '0' = Values where m=n=k  / '1' = Multiple combinations of m/n/k
0       # alpha/beta : '0' = Fixed value   / '1' = Multiple values with combination
0       # Integer bit-exactness testing
        # '0' = 's/d/c/z' datatype testing
        # '1' = Integer bit-exactness testing
0       # '0' = Print only fail cases
        # '1' = Print pass and fail cases
0       # Bit-Reproducibility
        # '0' = Disable
        # '1' = Enable
r       # lpgemm memformat reorder
        # 'p' = No reorder
        # 'r' = reorder
