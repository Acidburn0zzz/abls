# --------------------------------------------------------------------------
#
#  input.operations
#  BLIS GtestSuite
#
#  This file contains input values that control which BLIS operations are
#  tested as well as how those test runs are parameterized. We will now
#  describe how each section or line type may be edited.
#
#  ENABLING/DISABLING INDIVIDUAL OPERATION TESTS
#    Given that an operation's section override switch is set to 1
#    (enabled), whether or not that operation will get tested is
#    determined by its local switch. For example, if the level-1v section
#    override is set to 1, and there is a 1 on the line marked "addv",
#    then the addv operation will be tested. Similarly, a 0 would cause
#    addv to not be tested.
#
#  CHANGING PROBLEM SIZE/SHAPES TESTED
#    The problem sizes tested by an operation are determined by the
#    dimension specifiers on the line marked "dimensions: <spec_labels>".
#    If, for example, <spec_labels> contains two dimension labels (e.g.
#    "m n"), then the line should begin with two dimension specifiers.
#    Dimension specifiers of -1 cause the corresponding dimension to be
#    bound to the problem size, which is determined by values set in
#    input.general. Positive values cause the corresponding dimension to
#    be fixed to that value and held constant.
#
#    Examples of dimension specifiers (where the dimensions are m and n):
#
#       -1 -1     Dimensions m and n grow with problem size (resulting in
#                 square matrices).
#       -1 150    Dimension m grows with problem size and n is fixed at
#                 150.
#       -1 -2     Dimension m grows with problem size and n grows
#                 proportional to half the problem size.
#
#  CHANGING PARAMTER COMBINATIONS TESTED
#    The parameter combinations tested by an operation are determined by
#    the parameter specifier characters on the line marked "parameters:
#    <param_labels>". If, for example, <param_labels> contains two
#    parameter labels (e.g. "transa conjx"), then the line should contain
#    two parameter specifier characters. The '?' specifier character
#    serves as a wildcard--it causes all possible values of that parameter
#    to be tested. A character such as 'n' or 't' causes only that value
#    to be tested.
#
#    Examples of parameter specifiers (where the parameters are transa
#    and conjx):
#
#       ??        All combinations of the transa and conjx parameters are
#                 tested: nn, nc, tn, tc, cn, cc, hn, hc.
#       ?n        conjx is fixed to "no conjugate" but transa is allowed
#                 to vary: nn, tn, cn, hn.
#       hc        Only the case where transa is "Hermitian-transpose" and
#                 conjx is "conjugate" is tested.
#
#    Here is a full list of the parameter types used by the various BLIS
#    operations along with their possible character encodings:
#
#       side:   l,r      left, right
#       uplo:   l,u      lower, upper
#       trans:  n,t,c,h  no transpose, transpose, conjugate, Hermitian-
#                        transpose (i.e. conjugate-transpose)
#       conj:   n,c      no conjugate, conjugate
#       diag:   n,u      non-unit diagonal, unit diagonal
#
# --------------------------------------------------------------------------

# --- Utility --------------------------------------------------------------

0        # randv
-1       #   dimensions: m

0        # randm
-1 -1    #   dimensions: m n


# --- Level-1v -------------------------------------------------------------

0        # addv
-1       #   dimensions: m
?        #   parameters: conjx

0        # amaxv
-1       #   dimensions: m

0        # axpbyv
-1       #   dimensions: m
?        #   parameters: conjx

0        # axpyv
-1       #   dimensions: m
?        #   parameters: conjx

0        # copyv
-1       #   dimensions: m
?        #   parameters: conjx

0        # dotv
-1       #   dimensions: m
??       #   parameters: conjx conjy

0        # dotxv
-1       #   dimensions: m
??       #   parameters: conjx conjy

0        # normfv
-1       #   dimensions: m

0        # scalv
-1       #   dimensions: m
?        #   parameters: conjbeta

0        # scal2v
-1       #   dimensions: m
?        #   parameters: conjx

0        # setv
-1       #   dimensions: m

0        # subv
-1       #   dimensions: m
?        #   parameters: conjx

0        # xpbyv
-1       #   dimensions: m
?        #   parameters: conjx


# --- Level-1m -------------------------------------------------------------

0        # addm
-1 -2    #   dimensions: m n
?        #   parameters: transa

0        # axpym
-1 -1    #   dimensions: m n
?        #   parameters: transa

0        # copym
-1 -2    #   dimensions: m n
?        #   parameters: transa

0        # normfm
-1 -2    #   dimensions: m n

0        # scalm
-1 -2    #   dimensions: m n
?        #   parameters: conjbeta

0        # scal2m
-1 -2    #   dimensions: m n
?        #   parameters: transa

0        # setm
-1 -2    #   dimensions: m n

0        # subm
-1 -2    #   dimensions: m n
?        #   parameters: transa

0        # xpbym
-1 -1    #   dimensions: m n
?        #   parameters: transa


# --- Level-1f kernels -----------------------------------------------------

0        # axpy2v
-1       #   dimensions: m
??       #   parameters: conjx conjy

0        # dotaxpyv
-1       #   dimensions: m
???      #   parameters: conjxt conjx conjy

0        # axpyf
-1       #   dimensions: m
??       #   parameters: conja conjx

0        # dotxf
-1       #   dimensions: m
??       #   parameters: conjat conjx

0        # dotxaxpyf
-1       #   dimensions: m
????     #   parameters: conjat conja conjw conjx


# --- Level-2 --------------------------------------------------------------

0        # gemv
-1 -2    #   dimensions: m n
??       #   parameters: transa conjx

0        # ger
-1 -2    #   dimensions: m n
??       #   parameters: conjx conjy

0        # hemv
-1       #   dimensions: m
???      #   parameters: uploa conja conjx

0        # her
-1       #   dimensions: m
??       #   parameters: uploc conjx

0        # her2
-1       #   dimensions: m
???      #   parameters: uploc conjx conjy

0        # symv
-1       #   dimensions: m
???      #   parameters: uploa conja conjx

0        # syr
-1       #   dimensions: m
??       #   parameters: uploc conjx

0        # syr2
-1       #   dimensions: m
???      #   parameters: uploc conjx conjy

0        # trmv
-1       #   dimensions: m
???      #   parameters: uploa transa diaga

0        # trsv
-1       #   dimensions: m
???      #   parameters: uploa transa diaga


# --- Level-3 micro-kernels ------------------------------------------------

0        # gemm
-1       #   dimensions: k

0        # trsm
?        #   parameters: uploa

0        # gemmtrsm
-1       #   dimensions: k
?        #   parameters: uploa


# --- Level-3 --------------------------------------------------------------

1        # gemm
-1 -1 -1 #   dimensions: m n k
??       #   parameters: transa transb

0        # gemmt
-1 -1    #   dimensions: m k
???      #   parameters: uploc transa transb

0        # hemm
-1 -1    #   dimensions: m n
??       #   parameters: side uploa

0        # herk
-1 -1    #   dimensions: m k
??       #   parameters: uploc trans

0        # her2k
-1 -1    #   dimensions: m k
??       #   parameters: uploc trans

0        # symm
-1 -1    #   dimensions: m n
??       #   parameters: side uploa

0        # syrk
-1 -1    #   dimensions: m k
??       #   parameters: uploc trans

0        # syr2k
-1 -1    #   dimensions: m k
??       #   parameters: uploc trans

0        # trmm
-1 -1    #   dimensions: m n
????     #   parameters: side uploa transa diaga

0        # trmm3
-1 -1    #   dimensions: m n
?????    #   parameters: side uploa transa diaga transb

0        # trsm
-1 -1    #   dimensions: m n
????     #   parameters: side uploa transa diaga

# --- lpgemm --------------------------------------------------------------

0        # gemm_u8s8s32os32
-1 -1 -1 #   dimensions: m n k
nn       #   parameters: transa transb

0        # gemm_u8s8s32os8
-1 -1 -1 #   dimensions: m n k
nn       #   parameters: transa transb

0        # gemm_f32f32f32of32
-1 -1 -1 #   dimensions: m n k
nn       #   parameters: transa transb

0        # gemm_u8s8s16os16
-1 -1 -1 #   dimensions: m n k
nn       #   parameters: transa transb

0        # gemm_u8s8s16os8
-1 -1 -1 #   dimensions: m n k
nn       #   parameters: transa transb

0        # gemm_bf16bf16f32of32
-1 -1 -1 #   dimensions: m n k
nn       #   parameters: transa transb

0        # gemm_bf16bf16f32obf16
-1 -1 -1 #   dimensions: m n k
nn       #   parameters: transa transb

