file(GLOB_RECURSE SOURCES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} "src/*/*.cpp")
add_library(testinghelpers STATIC ${SOURCES})
target_compile_definitions(testinghelpers PUBLIC REFERENCE_BLAS="${REF_LIB}")
if(REF_CBLAS STREQUAL "MKL")
    target_compile_definitions(testinghelpers PUBLIC MKL_CORE="${MKL_CORE_PATH}" MKL_GNU_THREAD="${MKL_GNU_THREAD_PATH}" REF_IS_MKL)
elseif(REF_CBLAS STREQUAL "Netlib")
    target_compile_definitions(testinghelpers PUBLIC REF_IS_NETLIB)
elseif(REF_CBLAS STREQUAL "OpenBLAS")
    target_compile_definitions(testinghelpers PUBLIC REF_IS_OPENBLAS)
endif()
if(TEST_INTERFACE STREQUAL "BLAS")
    target_compile_definitions(testinghelpers PUBLIC TEST_BLAS)
elseif(TEST_INTERFACE STREQUAL "CBLAS")
    target_compile_definitions(testinghelpers PUBLIC TEST_CBLAS)
else() # BLIS_TYPED option
    target_compile_definitions(testinghelpers PUBLIC TEST_BLIS_TYPED)
endif()
if(INT_SIZE STREQUAL "32")
    target_compile_definitions(testinghelpers PUBLIC INT_SIZE=32)
else()
    target_compile_definitions(testinghelpers PUBLIC INT_SIZE=64)
endif()
target_include_directories(testinghelpers PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/inc ${BLIS_INCLUDE})
target_link_libraries(testinghelpers pthread)
